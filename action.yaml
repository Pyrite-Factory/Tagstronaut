name: "Tagstronaut"
author: "sindre0830"
description: "Calculates the next version based on major, minor, or patch input."

inputs:
  bump_type:
    description: "Type of version increment (major, minor, patch)"
    required: true
  debug:
    description: "Enable debugging (true/false)"
    required: false
    default: "false"
  debug_init_tag:
    description: "Debug with initial tag (e.g. v1.2.3)"
    required: false
    default: ""

outputs:
  new_version:
    description: "The calculated next version tag"
    value: ${{ steps.calculate-new-version.outputs.new_version }}

runs:
  using: "composite"
  steps:
    - name: "Checkout code"
      uses: actions/checkout@v4

    - name: Setup debugging
      if: ${{ inputs.debug == 'true' }}
      run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

          git init

          echo "42" > test.txt

          git add test.txt
          git commit -m "Initial commit"

          if [[ -n "${{ inputs.debug_init_tag }}" ]]; then
            git tag "${{ inputs.debug_init_tag }}"
          fi
      shell: bash

    - name: "Get latest tag"
      run: |
        git fetch --tags

        TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $TAG"

        echo "tag=$TAG" >> $GITHUB_ENV
      shell: bash

    - name: "Calculate new version"
      id: calculate-new-version
      run: |
        TAG="${{ env.tag }}"
        bump_type="${{ inputs.bump_type }}"
        version=${TAG#v}

        IFS='.' read -r major minor patch <<< "$version"

        if [[ "$bump_type" == "major" ]]; then
          major=$((major + 1)); minor=0; patch=0
        elif [[ "$bump_type" == "minor" ]]; then
          minor=$((minor + 1)); patch=0
        elif [[ "$bump_type" == "patch" ]]; then
          patch=$((patch + 1))
        else
          echo "Invalid bump type: $bump_type"
          exit 1
        fi

        NEW_TAG="v$major.$minor.$patch"
        echo "new_version=$NEW_TAG" >> $GITHUB_OUTPUT
      shell: bash
